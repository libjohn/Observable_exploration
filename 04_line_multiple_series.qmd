---
title: "04_lineplot"
format: html
---

1. import data as an acquero data frame

```{ojs}
// newdata = FileAttachment("data/starsmall_freqtbl.csv").csv({ typed: true})
// my_summary_data = FileAttachment("worshops_over_time.csv").csv({ typed: true})
newdata = aq.loadCSV("my_temp_reg.csv")
```

2. view

```{ojs}
newdata.view()
```


3. wrangle data

```{ojs}
wrangled_df = newdata
  .groupby('workshop_date', 'theme')
  // .filter(d => d.body_mass_g > 0)
  .rollup({
    count: op.count(),
   })
   
wrangled_df
  .view()
```


4. Viz

example code from: https://observablehq.com/@d3/multi-line-chart?collection=@d3/charts

```
chart = LineChart(unemployment, {
  x: d => d.date,
  y: d => d.unemployment,
  z: d => d.division,
  yLabel: "??? Unemployment (%)",
  width,
  height: 500,
  color: "steelblue",
  voronoi // if true, show Voronoi overlay
})
```

```{ojs}
LineChart(wrangled_df, {
  x: d => d.workshop_date,
  y: d => d.count,
  z: d => d.theme,
  yLabel: "??? Unemployment (%)",
  width: 800,
  height: 500,
  color: "steelblue",
  //voronoi // if true, show Voronoi overlay 
})
```


## Testing with cleaner data


```
{r}
ggplot2::economics |> tail()
ggplot2::economics_long |> 
  mutate(year = clock::get_year(date)) |> 
  write_csv("economics_long.csv")
```



```{ojs}
// foo
eco_long = aq.loadCSV("economics_long.csv")
eco =     aq.loadCSV("economics.csv")


eco_long.view()
eco.view()
```

```{ojs}
year_select = 2010

eco_long
  .params({
   y: year_select
  })
  .filter((d, $) => d.year == $.y)
  //.filter(d => d.year == 2000)
  .view()
```


```{ojs}
eco_long
  //.filter((d, $) => d.year = $.y))
  .filter(d => d.year == 2000)
  .view()
```

```{ojs}
LineChart(eco_long, {
  x: d => d.date,
  y: d => d.value01,
  z: d => d.variable,
  yLabel: "??? Unemployment (%)",
  width: 800,
  height: 500,
  color: "steelblue",
  //voronoi // if true, show Voronoi overlay 
})
```

## hard code year = 9999

```{ojs}
LineChart(eco_long.filter(d => d.year > 2000), {
  x: d => d.date,
  y: d => d.value01,
  z: d => d.variable,
  yLabel: "??? Unemployment (%)",
  width: 800,
  height: 500,
  color: "steelblue",
  //voronoi // if true, show Voronoi overlay 
})
```

### identify a variable

```{ojs}
viewof theme_selected = Inputs.select(  
  ["pop", "pce", "unemploy", "", "Data Visualization", "psavert", "unempmed"],
  { label: "Theme:" }
  )
  
theme_selected
```

```{ojs}
LineChart(eco_long
            .params({
              th: theme_selected
            })
            .filter((d, $) => op.includes($.th, d.variable)), {
            //(d => op.includes("psavert", d.variable)), {
  x: d => d.date,
  y: d => d.value01,
  z: d => d.variable,
  yLabel: "??? Unemployment (%)",
  width: 800,
  height: 500,
  color: "steelblue",
  //voronoi // if true, show Voronoi overlay 
})
```


### hard code filter == "pop"

```{ojs}
LineChart(eco_long.filter(d => op.includes("psavert", d.variable)), {
  x: d => d.date,
  y: d => d.value01,
  z: d => d.variable,
  yLabel: "??? Unemployment (%)",
  width: 800,
  height: 500,
  color: "steelblue",
  //voronoi // if true, show Voronoi overlay 
})
```


```{ojs}
LineChart(eco_long, {
  x: d => d.date,
  y: d => d.value01,
  z: d => d.variable,
  yLabel: "??? Unemployment (%)",
  width: 800,
  height: 500,
  color: "steelblue",
  //voronoi // if true, show Voronoi overlay 
})
```

***

## Converting from r code 

Make a Tidyverse tibble into an Arquero data frame

1. `ojs_define()` is an {r} function
1. `transpose()` is an {ojs} function
1. `aq.from()` is an Arquero function performed in an {ojs} code block

```{r}
#| warning: false
#| message: false
library(tidyverse)

my_economics_tbl <- ggplot2::economics
ojs_define(my_economics_tbl_ojs = my_economics_tbl)

```

```{ojs}
my_aq_eco_from_tble = aq.from(transpose(my_economics_tbl_ojs))
```

```{ojs}
my_aq_eco_from_tble.view()
```


```{ojs}
eco_long.view()
```


---

https://observablehq.com/@d3/line-chart https://observablehq.com/@d3/inline-labels?collection=@d3/charts

```{ojs}
// import { LineChart }  from "@d3/line-chart"
// import { LineChart } from "@d3/line-with-tooltip"
import { LineChart } from "@d3/multi-line-chart"
import {InlineChart} from "@d3/inline-labels"
import { ChangeLineChart } from "@d3/change-line-chart"
import { aq, op } from '@uwdata/arquero'
```