---
title: "03_lineplotradiobutton"
author: "John Little"
format: html
---

```{r}
#| eval: false
library(tidyverse)
my_df <- read_csv('my_temp_reg.csv')


```
GIS"                "Data Management"    "Data Science"       "Data Visualization" NA   

```{ojs}
// newdata = FileAttachment("data/starsmall_freqtbl.csv").csv({ typed: true})
// my_summary_data = FileAttachment("worshops_over_time.csv").csv({ typed: true})
newdata = aq.loadCSV("my_temp_reg.csv")
```


```{ojs}
my_summary_data = aq.loadCSV("worshops_over_time.csv")
```

#### full registration data (for some recent years)

```{ojs}
//aq.table(ojs_peng)

newdata.view()
```

#### summarized above via dplyr

```{ojs}
my_summary_data.view()
```



```{ojs}
viewof theme_selected = Inputs.select(  
  ["GIS", "Data Management", "Data Science", "Data Visualization"],
  { label: "Theme:" }
  )
  
theme_selected

```


```{ojs}
newdata
  .params({
   i: theme_selected
  })
  .filter((d, $) => op.includes($.i, d.theme) )
  .view()
```


```{ojs}
newdata
  .groupby('workshop_date', 'theme')
  // .filter(d => d.body_mass_g > 0)
  .rollup({
    count: op.count(),
   })
  .view()
```


```{ojs}
df_theme = newdata
  .groupby('workshop_date', 'theme')
  // .filter(d => d.body_mass_g > 0)
  .rollup({
    count: op.count(),
   })
   
df_theme
  .view()
```



LineChart(df_theme, {
  x: d => d.workshop_date,
  y: d => d.count,
  z: d => d.theme,
  yLabel: "Number of Registrants",
  width: 800,
  height: 400
})
```{ojs}
InlineChart(df_theme, {
  x: d => d.workshop_date,
  y: d => d.count,
  z: d => d.theme,
  width,
  height: 500
})
```
chart = InlineChart(sales, {
  x: d => d.date,
  y: d => d.sales,
  z: d => d.fruit,
  width,
  height: 500
})


## Dark Orange

```{ojs}
//chart = LineChart(my_summary_data, {
LineChart(my_summary_data, {
  x: d => d.workshop_date,
  y: d => d.n,
  yLabel: "Number of Registrants",
  width: 800,
  height: 400,
  color: "darkorange"
})
```

---

```{ojs}
// 'workshop_name', 'workshop_id', 'workshop_date'
Inputs.table(newdata, {sort: 'workshop_date', reverse: true, rows: 7})
```



```{ojs}
Plot.plot({
  marks: [
    Plot.line(year_filter, {x: 'workshop_date', y: 'n'})
]
})
```


```{ojs}
chart = LineChart(year_filter, {
  x: d => d.workshop_date,
  y: d => d.n,
  yLabel: "Number of Registrants",
  width: 800,
  height: 400,
  color: "darkorange"
})
```

```{ojs}
chartinline = InlineChart(year_filter, {
  x: d => d.workshop_date,
  y: d => d.n,
//  z: d => d.fruit,
  width: 800,
  height: 500
})
```

delme
```{ojs}
percent_chart = ChangeLineChart(year_filte;r, {
  x: d => d.workshop_date,
  y: d => d.n,
  // basis, // e.g., 93.24 (omit for the first y-value)
  yLabel: "â†‘ Change in attendance (%)",
  width: 800,
  height: 500,
  color: "steelblue"
})
```


***

```
{ojs}
// viewof search = Inputs.search(newdata)
// Inputs.table(search)
viewof year_df = Inputs.checkbox(["salty", "sweet", "bitter", "sour", "umami"], {label: "Flavors"})

viewof r = Inputs.radio(
  ["Lust", "Gluttony", "Greed", "Sloth", "Wrath", "Envy", "Pride"]
  )
  
viewof color = Inputs.radio(["red", "green", "blue"], {label: "color"})

viewof dd1 = Inputs.select({
  title: "Stooges",
  description: "Please pick your favorite stooge.",
  options: ["Curly", "Larry", "Moe", "Shemp"],
  value: "Moe"
})

r

color

dd1
```



***

https://observablehq.com/@d3/line-chart https://observablehq.com/@d3/inline-labels?collection=@d3/charts

```{ojs}
// import { LineChart }  from "@d3/line-chart"
import { LineChart } from "@d3/line-with-tooltip"
import {InlineChart} from "@d3/inline-labels"
import { ChangeLineChart } from "@d3/change-line-chart"
import { aq, op } from '@uwdata/arquero'
```
